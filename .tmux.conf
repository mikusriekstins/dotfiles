# set window split
bind-key v split-window -h
bind-key b split-window

#set -g default-terminal "/bin/bash"

set -g status-interval 1
set -g status-justify centre
set -g status-left-length 20
set -g status-right-length 140
set -g status-left '#[fg=black]#H #[fg=black]â€¢ #[fg=black]#(uname -r | cut -c 1-6)#[default]'
set -g status-right '#[fg=black,bg=default,bright]#(tmux-mem-cpu-load) #[fg=black]#(uptime | cut -f 4-5 -d " " | cut -f 1 -d ",") #[fg=black]%a %l:%M:%S %p#[default] #[fg=black]%Y-%m-%d'

# C-b is not acceptable -- Vim uses it
set-option -g prefix C-a
bind-key C-a send-prefix

# Allows for faster key repetition
set -s escape-time 0

# Start numbering at 1
set -g base-index 1


# Rather than constraining window size to the maximum size of any client 
# connected to the *session*, constrain window size to the maximum size of any 
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on
 
# Allows us to use C-a a <command> to send commands to a TMUX session inside 
# another TMUX session
bind-key a send-prefix

# Vi copypaste mode
# set-window-option -g mode-keys vi
# bind-key -t vi-copy 'v' begin-selection
# bind-key -t vi-copy 'y' copy-selection
# 
# # hjkl pane traversal
# bind h select-pane -L
# bind j select-pane -D
# bind k select-pane -U
# bind l select-pane -R
# 
# # set to main-horizontal, 60% height for main pane
# bind m set-window-option main-pane-height 60\; select-layout main-horizontal
# 
# bind-key C command-prompt -p "Name of new window: " "new-window -n '%%'"
# 
# # reload config
# bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."
# 
# # auto window rename
# set-window-option -g automatic-rename
# 
# # resizing panes
# bind J resize-pane -D 10
# bind K resize-pane -U 10
# bind L resize-pane -L 10
# bind H resize-pane -R 10
