# set window split
bind-key v split-window -h
bind-key b split-window

#set -g default-terminal "/bin/bash"

set -g status-interval 1
set -g status-justify centre
set -g status-left-length 20
set -g status-right-length 140
set -g status-left '#[fg=black]#H #[fg=black]â€¢ #[fg=black]#(uname -r | cut -c 1-6)#[default]'
set -g status-right '#[fg=black,bg=default,bright]#(tmux-mem-cpu-load) #[fg=black]#(uptime | cut -f 4-5 -d " " | cut -f 1 -d ",") #[fg=black]%a %l:%M:%S %p#[default] #[fg=black]%Y-%m-%d'

# C-b is not acceptable -- Vim uses it
set-option -g prefix C-a
bind-key C-a send-prefix

# Allows for faster key repetition
set -s escape-time 0

# Start numbering at 1
set -g base-index 1

# Mouse
set -g mouse on

# hjkl pane traversal
bind-key C-h select-pane -L
bind-key C-j select-pane -D
bind-key C-k select-pane -U
bind-key C-l select-pane -R
 
# set to main-horizontal, 60% height for main pane
bind-key m set-window-option main-pane-width 70\; select-layout main-vertical

# reload config
bind-key r source-file ~/.tmux.conf \; display-message "Config reloaded..."
 
# auto window rename
set-window-option -g automatic-rename

set -g mode-keys vi


# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# Copy like vim
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"
bind P paste-buffer
bind-key -T copy-mode-vi y send -X copy-selection-and-cancel
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel
